Bugs:
- stack overflow in rader.toit
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.toitlang.intellij.psi.ast.ToitExpression.acceptChildren(ToitExpression.java:32)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$2.recurse(ToitEvaluatedType.java:132)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$2.visit(ToitEvaluatedType.java:173)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$2.visit(ToitEvaluatedType.java:130)
	at org.toitlang.intellij.psi.ast.ToitTopLevelExpression.accept(ToitTopLevelExpression.java:16)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType.evaluate(ToitEvaluatedType.java:130)
	at org.toitlang.intellij.psi.ast.ToitExpression.getType(ToitExpression.java:36)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$1.visit(ToitEvaluatedType.java:96)
	at org.toitlang.intellij.psi.ast.ToitVariableDeclaration.accept(ToitVariableDeclaration.java:30)
	at org.toitlang.intellij.psi.visitor.ToitVisitableElement.accept(ToitVisitableElement.java:26)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType.resolveTypeOfNameInScope(ToitEvaluatedType.java:64)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$2.visit(ToitEvaluatedType.java:168)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$2.visit(ToitEvaluatedType.java:130)
	at org.toitlang.intellij.psi.ast.ToitPrimaryExpression.accept(ToitPrimaryExpression.java:16)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType.evaluate(ToitEvaluatedType.java:130)
	at org.toitlang.intellij.psi.ast.ToitExpression.getType(ToitExpression.java:36)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$2.visit(ToitEvaluatedType.java:187)
	at org.toitlang.intellij.psi.reference.ToitEvaluatedType$2.visit(ToitEvaluatedType.java:130)
	at org.toitlang.intellij.psi.ast.ToitCallExpression.accept(ToitCallExpression.java:20)
	at org.toitlang.intellij.psi.ast.ToitExpression.lambda$acceptChildren$0(ToitExpression.java:30)


java.util.ConcurrentModificationException: java.util.ConcurrentModificationException
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at java.base/java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:600)
	at java.base/java.util.concurrent.ForkJoinTask.reportException(ForkJoinTask.java:678)
	at java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:722)
	at com.intellij.concurrency.JobLauncherImpl.processQueue(JobLauncherImpl.java:357)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.processInOrder(InspectionRunner.java:309)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.visitElements(InspectionRunner.java:284)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.lambda$inspect$5(InspectionRunner.java:131)
	at com.intellij.codeInspection.InspectionEngine.withSession(InspectionEngine.java:227)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.inspect(InspectionRunner.java:110)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:97)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:56)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$1(PassExecutorService.java:419)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1152)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:412)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$executeProcessUnderProgress$12(CoreProgressManager.java:608)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:683)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computeUnderProgress(CoreProgressManager.java:639)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:607)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:60)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:411)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:387)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:174)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:213)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:385)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:184)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)
Caused by: java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1661)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.toitlang.intellij.psi.calls.ParametersInfo.getNonDefaultPositionalParameters(ParametersInfo.java:24)
	at org.toitlang.intellij.psi.ast.ToitFunction.getSignature(ToitFunction.java:202)
	at org.toitlang.intellij.inspections.SemanticErrorInspector.checkMissingImplementations(SemanticErrorInspector.java:82)
	at org.toitlang.intellij.inspections.SemanticErrorInspector$1.visit(SemanticErrorInspector.java:46)
	at org.toitlang.intellij.psi.ast.ToitStructure.accept(ToitStructure.java:32)
	at org.toitlang.intellij.psi.visitor.ToitVisitableElement.accept(ToitVisitableElement.java:26)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.lambda$processInOrder$10(InspectionRunner.java:333)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1152)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.lambda$processInOrder$11(InspectionRunner.java:312)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:174)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:213)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.lambda$processInOrder$12(InspectionRunner.java:346)
	at com.intellij.util.AstLoadingFilter.forceAllowTreeLoading(AstLoadingFilter.java:159)
	at com.intellij.util.AstLoadingFilter.forceAllowTreeLoading(AstLoadingFilter.java:151)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.lambda$processInOrder$13(InspectionRunner.java:310)
	at com.intellij.util.AstLoadingFilter.disallowTreeLoading(AstLoadingFilter.java:130)
	at com.intellij.util.AstLoadingFilter.disallowTreeLoading(AstLoadingFilter.java:119)
	at com.intellij.codeInsight.daemon.impl.InspectionRunner.lambda$processInOrder$14(InspectionRunner.java:310)
	at com.intellij.concurrency.JobLauncherImpl$1MyProcessQueueTask.lambda$call$0(JobLauncherImpl.java:297)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$executeProcessUnderProgress$12(CoreProgressManager.java:608)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:683)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computeUnderProgress(CoreProgressManager.java:639)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:607)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:60)
	at com.intellij.concurrency.JobLauncherImpl$1MyProcessQueueTask.call(JobLauncherImpl.java:282)
	at com.intellij.concurrency.JobLauncherImpl$1MyProcessQueueTask.call(JobLauncherImpl.java:270)
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1448)
	... 5 more



Top:
  - show params enhancement
  - enhanced display of missing implementations
  - check parameters in missing implementations
  - quick fix for missing reference (import)
  - quick fix for missing methods (implement)
  - Make ToitSdkFiles invalidate caches on changes

Near future
  - Add predefined identifier from token.h

Later
  - Quick Fix
  - Stubs
  - Cache resolves
  - Refactor completion contributor to not use extend in the constructor




Observation list:
   - import .impl as impl ....
   - message.is gives error ??
   - Stack overflow, Postfix.calculate
