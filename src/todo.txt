
Bugs:
class A:
  static X ::= 1
main:
  a = A
  a.X // <<== Should be an error

----
class B:
  A a
  B b
  constructor:
    a = A this
    b = B // <== This should be an error, initialize after this use


Top:
  - show params enhancement
  - enhanced display of missing implementations
  - check parameters in missing implementations
  - quick fix for missing reference (import)
  - quick fix for missing methods (implement)
  - Make ToitSdkFiles invalidate caches on changes
  - Top level declaration clashes with import

Near future
  - Add predefined identifier from token.h

Later
  - Quick Fix
  - Stubs
  - Cache resolves
  - Refactor completion contributor to not use extend in the constructor




Observation list:
   - import .impl as impl ....
   - message.is gives error ??
   - Stack overflow, Postfix.calculate


  In file: file:///Users/mikkel/proj/toit-lambda/.packages/github.com/toitlang/pkg-http/2.1.0/src/connection.toit

  java.lang.StringIndexOutOfBoundsException: begin 2, end 0, length 2
at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4606)
at java.base/java.lang.String.substring(String.java:2709)
at org.toitlang.intellij.psi.ast.ToitIdentifier.normalizeMinusUnderscore(ToitIdentifier.java:89)
at org.toitlang.intellij.psi.scope.ToitScope.addToLocal(ToitScope.java:48)
at org.toitlang.intellij.psi.scope.ToitScope.add(ToitScope.java:54)
at org.toitlang.intellij.psi.ast.ToitStructure$1.visit(ToitStructure.java:93)
at org.toitlang.intellij.psi.ast.ToitFunction.accept(ToitFunction.java:37)
at org.toitlang.intellij.psi.visitor.ToitVisitableElement.accept(ToitVisitableElement.java:26)
at com.intellij.psi.impl.PsiElementBase.acceptChildren(PsiElementBase.java:59)
at org.toitlang.intellij.psi.ast.ToitStructure.lambda$populateScope$0(ToitStructure.java:82)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.toitlang.intellij.psi.ast.ToitStructure.populateScope(ToitStructure.java:81)
at org.toitlang.intellij.psi.ast.ToitStructure.getScope(ToitStructure.java:76)
at org.toitlang.intellij.psi.ast.ToitStructure.getScope(ToitStructure.java:63)
at org.toitlang.intellij.psi.reference.ToitPostfixExpressionTypeEvaluatedType$1.visit(ToitPostfixExpressionTypeEvaluatedType.java:55)
at org.toitlang.intellij.psi.reference.ToitPostfixExpressionTypeEvaluatedType$1.visit(ToitPostfixExpressionTypeEvaluatedType.java:46)
at org.toitlang.intellij.psi.ast.ToitDerefExpression.accept(ToitDerefExpression.java:16)
at org.toitlang.intellij.psi.reference.ToitPostfixExpressionTypeEvaluatedType.calculate(ToitPostfixExpressionTypeEvaluatedType.java:46)
at org.toitlang.intellij.psi.reference.ToitReference$2.visit(ToitReference.java:234)
at org.toitlang.intellij.psi.ast.ToitDerefExpression.accept(ToitDerefExpression.java:16)
at org.toitlang.intellij.psi.reference.ToitReference.build(ToitReference.java:229)
at org.toitlang.intellij.psi.reference.ToitReference.create(ToitReference.java:282)
at org.toitlang.intellij.psi.ast.ToitReferenceIdentifier.getReference(ToitReferenceIdentifier.java:44)
at org.toitlang.intellij.highlighting.ToitAnnotationHighlighter$1.visit(ToitAnnotationHighlighter.java:45)
at org.toitlang.intellij.psi.ast.ToitReferenceIdentifier.accept(ToitReferenceIdentifier.java:19)
at org.toitlang.intellij.psi.visitor.ToitVisitableElement.accept(ToitVisitableElement.java:26)
at org.toitlang.intellij.highlighting.ToitAnnotationHighlighter.annotate(ToitAnnotationHighlighter.java:16)
at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.runAnnotators(DefaultHighlightVisitor.java:130)
at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.visit(DefaultHighlightVisitor.java:107)
at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.runVisitors(GeneralHighlightingPass.java:360)
at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.lambda$collectHighlights$7(GeneralHighlightingPass.java:299)
at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:320)
at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.lambda$analyzeByVisitors$8(GeneralHighlightingPass.java:323)
at com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor.analyze(DefaultHighlightVisitor.java:92)
at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.analyzeByVisitors(GeneralHighlightingPass.java:323)
at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectHighlights(GeneralHighlightingPass.java:286)
at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectInformationWithProgress(GeneralHighlightingPass.java:234)
at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:95)
at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:57)
at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$1(PassExecutorService.java:390)
at com.intellij.platform.diagnostic.telemetry.helpers.TraceKt.runWithSpanIgnoreThrows(trace.kt:77)
at com.intellij.platform.diagnostic.telemetry.helpers.TraceUtil.runWithSpanThrows(TraceUtil.java:24)
at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:386)
at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1133)
at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$3(PassExecutorService.java:377)
at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$executeProcessUnderProgress$13(CoreProgressManager.java:604)
at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:679)
at com.intellij.openapi.progress.impl.CoreProgressManager.computeUnderProgress(CoreProgressManager.java:635)
at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:603)
at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:61)
at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:376)
at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:352)
at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:201)
at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:207)
at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:350)
at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:190)
at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)


java.lang.Throwable: Cannot distinguish StubFileElementTypes. This might worsen the performance. Providing unique externalId or adding a distinctive debugName when instantiating StubFileElementTypes can help. Version: psi.file:1:FILE -> [org.toitlang.intellij.parser.ToitFileElementType{psi.file;FILE;Language: Toit}, com.intellij.psi.tree.IStubFileElementType{psi.file;FILE;Language: Pest}, com.intellij.psi.tree.IStubFileElementType{psi.file;FILE;Language: ANY}]
	at com.intellij.openapi.diagnostic.Logger.error(Logger.java:370)
	at com.intellij.psi.stubs.PerFileElementTypeStubModificationTracker.lambda$determinePreviousFileElementType$8(PerFileElementTypeStubModificationTracker.java:222)
	at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1916)
	at com.intellij.psi.stubs.PerFileElementTypeStubModificationTracker.determinePreviousFileElementType(PerFileElementTypeStubModificationTracker.java:218)
	at com.intellij.psi.stubs.PerFileElementTypeStubModificationTracker.fastCheck(PerFileElementTypeStubModificationTracker.java:118)
	at com.intellij.psi.stubs.PerFileElementTypeStubModificationTracker.lambda$endUpdatesBatch$2(PerFileElementTypeStubModificationTracker.java:92)
	at com.intellij.openapi.application.ReadAction.lambda$run$1(ReadAction.java:64)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:923)
	at com.intellij.openapi.application.ReadAction.compute(ReadAction.java:76)
	at com.intellij.openapi.application.ReadAction.run(ReadAction.java:63)
	at com.intellij.psi.stubs.PerFileElementTypeStubModificationTracker.endUpdatesBatch(PerFileElementTypeStubModificationTracker.java:91)
	at com.intellij.util.indexing.events.ChangedFilesCollector$4.endBatch(ChangedFilesCollector.java:252)
	at com.intellij.util.indexing.events.ChangedFilesCollector$5.lambda$endBatch$2(ChangedFilesCollector.java:289)
	at com.intellij.util.ConcurrencyUtil.withLock(ConcurrencyUtil.java:264)
	at com.intellij.util.indexing.events.ChangedFilesCollector$5.endBatch(ChangedFilesCollector.java:288)
	at com.intellij.util.indexing.events.VfsEventsMerger.processChanges(VfsEventsMerger.java:109)
	at com.intellij.util.indexing.events.ChangedFilesCollector.processFilesInReadAction(ChangedFilesCollector.java:271)
	at com.intellij.util.indexing.events.ChangedFilesCollector.processFilesToUpdateInReadAction(ChangedFilesCollector.java:230)
	at com.intellij.util.indexing.FileBasedIndexScanUtil.ensureUpToDate(FileBasedIndexScanUtil.java:52)
	at com.intellij.util.indexing.FileBasedIndexScanUtil.getIndexData(FileBasedIndexScanUtil.java:58)
	at com.intellij.psi.impl.cache.impl.IndexTodoCacheManagerImpl.getTodoMapFromIndex(IndexTodoCacheManagerImpl.java:133)
	at com.intellij.psi.impl.cache.impl.IndexTodoCacheManagerImpl.getTodoMap(IndexTodoCacheManagerImpl.java:119)
	at com.intellij.psi.impl.cache.impl.IndexTodoCacheManagerImpl.getTodoCountImpl(IndexTodoCacheManagerImpl.java:105)
	at com.intellij.psi.impl.cache.impl.IndexTodoCacheManagerImpl.getTodoCount(IndexTodoCacheManagerImpl.java:94)
	at com.intellij.psi.impl.search.IndexPatternSearcher.processQuery(IndexPatternSearcher.java:58)
	at com.intellij.psi.impl.search.IndexPatternSearcher.processQuery(IndexPatternSearcher.java:39)
	at com.intellij.openapi.application.QueryExecutorBase.execute(QueryExecutorBase.java:76)
	at com.intellij.util.ExecutorsQuery.processResults(ExecutorsQuery.java:30)
	at com.intellij.util.AbstractQuery.doProcessResults(AbstractQuery.java:88)
	at com.intellij.util.AbstractQuery.forEach(AbstractQuery.java:80)
	at com.intellij.util.AbstractQuery.findAll(AbstractQuery.java:25)
	at com.intellij.psi.impl.search.PsiTodoSearchHelperImpl.findTodoItems(PsiTodoSearchHelperImpl.java:55)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.highlightTodos(GeneralHighlightingPass.java:504)
	at com.intellij.codeInsight.daemon.impl.GeneralHighlightingPass.collectInformationWithProgress(GeneralHighlightingPass.java:229)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:95)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:57)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$1(PassExecutorService.java:390)
	at com.intellij.platform.diagnostic.telemetry.helpers.TraceKt.runWithSpanIgnoreThrows(trace.kt:77)
	at com.intellij.platform.diagnostic.telemetry.helpers.TraceUtil.runWithSpanThrows(TraceUtil.java:24)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:386)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1133)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$3(PassExecutorService.java:377)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$executeProcessUnderProgress$13(CoreProgressManager.java:604)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:679)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computeUnderProgress(CoreProgressManager.java:635)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:603)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:61)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:376)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:352)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:201)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:207)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:350)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:190)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
